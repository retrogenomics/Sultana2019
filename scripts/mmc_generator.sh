#!/usr/bin/env bash

###################################################
# Generate l1 motif-matched control (mmc) dataset #
###################################################

# requires Homer and pytfmpval
# input .fa file generated by weblogo.sh script

input="hg19.l1neo.soni.loc.helas3.-3bp+8bp.fa"
name=$( basename ${input} .fa)

# create Homer- & TFM-compatible motifs
awk '!/^>/{print toupper($1)}' "${name}.fa" \
> "${name}.seqs"

awk -v OFS='\t' '
{
  f=FILENAME;
  n++;
  l=split($1,s,"");
  for(i=1;i<=l;i++){t[i,s[i]]++}
} END {
  print ">"f,f,0;
  for(i=1;i<=l;i++){print t[i,"A"]/n,t[i,"C"]/n,t[i,"G"]/n,t[i,"T"]/n}
}' "${name}.seqs" \
> "${name}.homer.motif"

awk -v OFS='\t' '
{
  f=FILENAME;
  n++;
  l=split($1,s,"");
  for (i=1;i<=l;i++) {t[i, s[i]]++};
} END {
  u[1]="A";
  u[2]="C";
  u[3]="G";
  u[4]="T";
  for (i in u) {for (j=1;j<=l;j++) {printf "%d\t",t[j,u[i]]}; print""};
}' "${name}.seqs" \
> "${name}.TFM_motif"

# set score to level predicted for 1 hit per kb
TFMpvalue-pv2sc -a 0.25 -t 0.25 -c 0.25 -g 0.25 -m "${name}.TFM_motif" -p 1e-3 \
> "${name}.1e-3.score"

# score=4.96256 comes from TFMpvalue-pv2sc output
awk -v score=4.96256 -v OFS='\t' '/^>/{$3=score;print} !/^>/' "${name}.homer.motif" \
> "${name}.1e-3.score.homer.motif"

# annotate genome with L1 motif matches
# output is not in 0-based .bed format !

scanMotifGenomeWide.pl "${name}.1e-3.score.homer.motif" hg19 \
| awk -v OFS='\t' '($2~/chr/){print $2,$3,$4,$1,$6,$5,$7}' \
> hg19.l1neo_motif.bed

gzip hg19.l1neo_motif.bed

# generate 1000 random datasets of 2bp regions, each centred on the midpoint of a motif
# output is NOW in 0-based .bed format
gunzip -c hg19.l1neo_motif.bed.gz \
| intersectBed -wa -a stdin -b /home/Share/gael/iss_datasets/hg19.helaAllowedGenomeSpace.bed \
| shuf \
| head -1565000 \
| cut -f 1-6 \
| awk -v OFS='\t' 'BEGIN{r=0;l=1565}
  (l==1565){
    print "track","type=bed","name=\"random_motif_dataset_"r"\"";
    r++;
    l=0;
  }
  {
    l++;
    print;
  }' \
| awk -v OFS='\t' '
  (/^track/) {print}
  (/^chr/) {
    if ($6=="+") {$2+=1} else {$2+=6};
    $3=$2+2;
    print;
  }' \
> random_motif_datasets.2bp.bed

# split and relabel mmc dataset
awk 'BEGIN {set=0}
{
  if ($1 ~/^track/){
    set++;
    file=sprintf("tmp_%04d.bed", set) ;
    printf "" > file ;
  }
  else {
    print $0 >> file ;
  }
} ' random_motif_datasets.2bp.bed

set=1
for file in tmp_*;
do
  output=$( printf "hg19.l1neo.soni.mmc_loc.%04d.bed" "${set}" )
  sort -k1,1 -k2,2n "${file}" \
  | awk 'BEGIN {id=1; name="l1neo|insilico|soni|mmc_loc|"}
    {
      printf $1 "\t" $2 "\t" $3 "\t" name "%04d\t" $5 "\t" $6 "\n", id;
      id++;
    }' \
  > "${output}"
  ((set++))
done

rm tmp_*
